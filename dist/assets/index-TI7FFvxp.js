(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();class b{constructor(){this.element=this.createViewElement(),this.onStoryClick=null,this.onNextPage=null,this.onPrevPage=null,this.onAddStoryClick=null}createViewElement(){const e=document.createElement("div");return e.className="home-view",e.innerHTML=`
        <h2>Latest Stories</h2>
        <div class="stories-container"></div>
        <div class="pagination">
          <button class="prev-btn">Previous</button>
          <button class="next-btn">Next</button>
        </div>
        <button class="add-story-btn" style="display: none;">Add Story</button>
      `,e}getElement(){return this.element}displayStories(e){const t=this.element.querySelector(".stories-container");if(t.innerHTML="",!e||!Array.isArray(e)){this.showError("Invalid stories data");return}if(e.length===0){t.innerHTML="<p>No stories found</p>";return}e.forEach(s=>{if(!s||!s.id)return;const o=document.createElement("div");o.className="story-card",o.innerHTML=`
          <img src="${s.photoUrl||"./public/fallback-image.png"}" 
               alt="Story by ${s.name||"Anonymous"}" 
               class="story-image"
               onerror="this.src='./public/fallback-image.png'">
          <h3>${s.name||"Untitled Story"}</h3>
          <p>${s.description?s.description.substring(0,100)+"...":"No description"}</p>
          <small>${s.createdAt?new Date(s.createdAt).toLocaleDateString():"Unknown date"}</small>
        `,o.addEventListener("click",()=>{this.onStoryClick&&this.onStoryClick(s.id)}),t.appendChild(o)})}enableAddStoryButton(){const e=this.element.querySelector(".add-story-btn");e.style.display="block",e.addEventListener("click",this.onAddStoryClick)}showError(e){const t=this.element.querySelector(".stories-container");t.innerHTML=`<div class="error">${e}</div>`}showLoading(){const e=this.getElement(),t=document.createElement("div");t.className="loading",t.innerHTML="Loading stories...",e.appendChild(t)}showError(e){const t=this.getElement(),s=document.createElement("div");s.className="error",s.textContent=e,t.appendChild(s)}showOfflineWarning(){const e=this.getElement(),t=document.createElement("div");t.className="offline-warning",t.textContent="Showing offline content. Some data may be outdated.",e.appendChild(t)}}const h="https://story-api.dicoding.dev/v1",S="BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk";class E{constructor(){this.token=localStorage.getItem("token")}setToken(e){this.token=e,localStorage.setItem("token",e)}clearToken(){this.token=null,localStorage.removeItem("token")}async register({name:e,email:t,password:s}){return(await fetch(`${h}/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,email:t,password:s})})).json()}async login({email:e,password:t}){return(await fetch(`${h}/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e,password:t})})).json()}async getStories({page:e=1,size:t=100,location:s=0}={}){const o=new URL(`${h}/stories`);return o.searchParams.append("page",e),o.searchParams.append("size",t),o.searchParams.append("location",s),(await fetch(o,{headers:{Authorization:`Bearer ${this.token}`}})).json()}async getStory(e){return(await fetch(`${h}/stories/${e}`,{headers:{Authorization:`Bearer ${this.token}`}})).json()}async addStory({description:e,photo:t,lat:s,lon:o}){const r=new FormData;return r.append("description",e),r.append("photo",t),s&&r.append("lat",s),o&&r.append("lon",o),(await fetch(`${h}/stories`,{method:"POST",headers:{Authorization:`Bearer ${this.token}`},body:r})).json()}async subscribePushNotification(e){return(await fetch(`${h}/notifications/subscribe`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},body:JSON.stringify(e)})).json()}async unsubscribePushNotification(e){return(await fetch(`${h}/notifications/subscribe`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},body:JSON.stringify({endpoint:e})})).json()}async registerServiceWorker(){if("serviceWorker"in navigator)try{const e=await navigator.serviceWorker.register("/sw.js");return console.log("ServiceWorker registration successful"),e}catch(e){console.error("ServiceWorker registration failed:",e)}}async subscribeToPush(e){try{return await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:this.urlBase64ToUint8Array(S)})}catch(t){console.error("Failed to subscribe:",t)}}urlBase64ToUint8Array(e){const t="=".repeat((4-e.length%4)%4),s=(e+t).replace(/-/g,"+").replace(/_/g,"/"),o=window.atob(s);return Uint8Array.from([...o].map(r=>r.charCodeAt(0)))}}const c=new E;class k{constructor(){this.listeners=[],this.user=JSON.parse(localStorage.getItem("user")),this.token=localStorage.getItem("token")}onAuthStateChanged(e){this.listeners.push(e),e(this.user)}async register({name:e,email:t,password:s}){try{const o=await c.register({name:e,email:t,password:s});if(o.error)throw new Error(o.message);return o}catch(o){throw o}}async login({email:e,password:t}){try{const s=await c.login({email:e,password:t});if(s.error)throw new Error(s.message);return this.user=s.loginResult,this.token=s.loginResult.token,c.setToken(this.token),localStorage.setItem("user",JSON.stringify(this.user)),localStorage.setItem("token",this.token),this.notifyListeners(),s}catch(s){throw s}}logout(){this.user=null,this.token=null,c.clearToken(),localStorage.removeItem("user"),localStorage.removeItem("token"),this.notifyListeners()}isAuthenticated(){return!!this.user}getUser(){return this.user}getToken(){return this.token}notifyListeners(){this.listeners.forEach(e=>e(this.user))}}const u=new k;let C=class{constructor(){this.dbName="StoryAppDB",this.dbVersion=1,this.storyStore="stories",this.draftStore="drafts",this.db=null}async openDB(){return new Promise((e,t)=>{const s=indexedDB.open(this.dbName,this.dbVersion);s.onupgradeneeded=o=>{const r=o.target.result;r.objectStoreNames.contains(this.storyStore)||r.createObjectStore(this.storyStore,{keyPath:"id"}),r.objectStoreNames.contains(this.draftStore)||r.createObjectStore(this.draftStore,{keyPath:"id",autoIncrement:!0})},s.onsuccess=o=>{this.db=o.target.result,e(this.db)},s.onerror=o=>{t("IndexedDB error: "+o.target.error)}})}async saveStory(e){const t=await this.openDB();return new Promise((s,o)=>{const n=t.transaction([this.storyStore],"readwrite").objectStore(this.storyStore).put(e);n.onsuccess=()=>s(),n.onerror=l=>o(l.target.error)})}async saveDraft(e){const t=await this.openDB();return new Promise((s,o)=>{const n=t.transaction([this.draftStore],"readwrite").objectStore(this.draftStore).put(e);n.onsuccess=()=>s(),n.onerror=l=>o(l.target.error)})}async getStories(){const e=await this.openDB();return new Promise((t,s)=>{const i=e.transaction([this.storyStore],"readonly").objectStore(this.storyStore).getAll();i.onsuccess=()=>t(i.result||[]),i.onerror=n=>s(n.target.error)})}async getDrafts(){const e=await this.openDB();return new Promise((t,s)=>{const i=e.transaction([this.draftStore],"readonly").objectStore(this.draftStore).getAll();i.onsuccess=()=>t(i.result||[]),i.onerror=n=>s(n.target.error)})}async deleteDraft(e){const t=await this.openDB();return new Promise((s,o)=>{const n=t.transaction([this.draftStore],"readwrite").objectStore(this.draftStore).delete(e);n.onsuccess=()=>s(),n.onerror=l=>o(l.target.error)})}async clearAllData(){const e=await this.openDB();return new Promise((t,s)=>{const o=e.transaction([this.storyStore,this.draftStore],"readwrite");o.objectStore(this.storyStore).clear(),o.objectStore(this.draftStore).clear(),o.oncomplete=()=>t(),o.onerror=r=>s(r.target.error)})}};const g=new C,P="BMyM2yXrYCtSZWVn-g9KzVmFBBEEGab1SyjuAECq2kMFwq2P2D3FT0jwLowVPNsLcmYG3Smr-n_C_3kZbUFiJX4";class T{constructor(){this.view=new b,this.stories=[]}async showView(e){e.innerHTML="",e.appendChild(this.view.getElement()),this.view.showLoading();try{if(!u.isAuthenticated()){this.view.showError("Please login to view stories");return}await this.setupPushNotifications();const t=await c.getStories();if(!t||!t.listStory)throw new Error("Invalid response format");this.stories=t.listStory,await this.saveStoriesToIDB(this.stories),this.view.displayStories(this.stories)}catch(t){console.error("Online fetch failed, trying IndexedDB:",t);try{const s=await g.getStories();s&&s.length>0?(this.stories=s,this.view.displayStories(s),this.view.showOfflineWarning()):this.view.showError("Unable to load stories. Please check your connection and login status.")}catch(s){console.error("IndexedDB error:",s),this.view.showError("Failed to load stories from any source.")}}this.setupEventListeners()}async saveStoriesToIDB(e){try{await g.clearAllData();for(const t of e)await g.saveStory(t)}catch(t){console.error("Error saving stories to IndexedDB:",t)}}setupEventListeners(){this.view.onStoryClick=e=>{window.location.hash=`#/stories/${e}`},this.view.onRefresh=async()=>{this.view.showLoading();try{const e=await c.getStories();this.stories=e,await this.saveStoriesToIDB(e),this.view.displayStories(e)}catch{this.view.showError("Failed to refresh. Please check your connection.")}}}async setupPushNotifications(){if(!("Notification"in window)||!("serviceWorker"in navigator)){console.log("Push notifications not supported");return}try{if(await Notification.requestPermission()==="granted"){const s=await(await navigator.serviceWorker.ready).pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:c.urlBase64ToUint8Array(P)});await c.subscribePushNotification({endpoint:s.endpoint,keys:{p256dh:s.toJSON().keys.p256dh,auth:s.toJSON().keys.auth}}),console.log("Successfully subscribed to push notifications")}}catch(e){console.error("Error setting up push notifications:",e)}}}class M{constructor(){this.element=this.createViewElement(),this.map=null,this.marker=null}createViewElement(){const e=document.createElement("div");return e.className="story-view",e.innerHTML=`
        <div class="story-details">
          <div class="story-header">
            <h2 class="story-title"></h2>
            <p class="story-date"></p>
          </div>
          <img class="story-image" alt="Story image">
          <p class="story-description"></p>
          <div id="story-map" style="height: 300px;"></div>
        </div>
        <div class="message"></div>
      `,e}getElement(){return this.element}displayStory(e){if(this.element.querySelector(".story-title").textContent=e.name,this.element.querySelector(".story-date").textContent=new Date(e.createdAt).toLocaleString(),this.element.querySelector(".story-image").src=e.photoUrl,this.element.querySelector(".story-image").alt=`Story by ${e.name}`,this.element.querySelector(".story-description").textContent=e.description,e.lat&&e.lon)this.element.querySelector("#story-map")&&setTimeout(()=>this.initMap(e.lat,e.lon),0);else{const t=this.element.querySelector("#story-map");t&&(t.style.display="none")}}initMap(e,t){try{if(typeof L>"u")throw new Error("Leaflet library not loaded");const s=document.getElementById("story-map");(!s||!s._leaflet_id)&&(this.map=L.map("story-map").setView([e,t],13),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(this.map),this.marker=L.marker([e,t]).addTo(this.map).bindPopup(`Story location: ${e.toFixed(4)}, ${t.toFixed(4)}`).openPopup())}catch(s){console.error("Map initialization failed:",s)}}showError(e){const t=this.element.querySelector(".message");t.textContent=e,t.className="message error"}}class A{constructor(e){this.storyId=e,this.view=new M}async showView(e){try{const t=await this.loadStory();e.innerHTML="",e.appendChild(this.view.getElement()),this.view.displayStory(t)}catch(t){console.error("Error loading story:",t),this.view.showError("Failed to load story")}}async loadStory(){const e=await c.getStory(this.storyId);if(e.error)throw new Error(e.message);return e.story}}class y{constructor(){this.element=this.createViewElement(),this.map=null,this.marker=null,this.onSubmit=null,this.onCancel=null,this.onMapClick=null,this.capturedPhoto=null}createViewElement(){const e=document.createElement("div");return e.className="add-story-view",e.innerHTML=`
      <h2>Add New Story</h2>
      <form class="story-form">
        <div class="form-group">
          <label for="description">Description</label>
          <textarea id="description" name="description" required></textarea>
        </div>
        
        <div class="form-group">
          <label>Photo</label>
          <div class="photo-container">
            <button type="button" class="camera-btn">Take Photo</button>
            <div class="photo-preview" id="photo-preview"></div>
          </div>
          <input type="file" id="photo-input" accept="image/*" capture="environment" style="display: none;">
        </div>
        
        <div class="form-group">
          <label>Location (click on map to set)</label>
          <div id="map" style="height: 300px;"></div>
          <p id="location-info">No location selected</p>
        </div>
        
        <div class="form-actions">
          <button type="button" class="cancel-btn">Cancel</button>
          <button type="submit" class="submit-btn">Submit</button>
        </div>
      </form>
      <div class="message"></div>
    `,e}getElement(){return this.element}initMap(){this.map=L.map("map").setView([0,0],2),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(this.map),this.map.on("click",e=>{this.onMapClick&&this.onMapClick(e.latlng.lat,e.latlng.lng)}),navigator.geolocation&&navigator.geolocation.getCurrentPosition(e=>{const{latitude:t,longitude:s}=e.coords;this.map.setView([t,s],13)},e=>{console.error("Error getting location:",e)})}updateLocationMarker(e,t){this.marker&&this.map.removeLayer(this.marker),this.marker=L.marker([e,t]).addTo(this.map).bindPopup(`Location: ${e.toFixed(4)}, ${t.toFixed(4)}`).openPopup(),document.getElementById("location-info").textContent=`Selected location: ${e.toFixed(4)}, ${t.toFixed(4)}`}setupEventListeners(){const e=this.element.querySelector(".story-form"),t=this.element.querySelector(".cancel-btn"),s=this.element.querySelector(".camera-btn"),o=this.element.querySelector("#photo-input"),r=this.element.querySelector("#photo-preview");s.addEventListener("click",async()=>{const i=s.textContent;console.log("TESTTTTT KAMERAAA");try{if(s.disabled=!0,s.textContent="Accessing camera...",navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const n=await navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"},audio:!1}),l=document.createElement("video");l.srcObject=n,l.play(),r.innerHTML="",r.appendChild(l);const d=document.createElement("canvas"),f=d.getContext("2d"),m=document.createElement("button");m.textContent="Capture Photo",m.className="capture-btn",r.appendChild(m),m.addEventListener("click",()=>{d.width=l.videoWidth,d.height=l.videoHeight,f.drawImage(l,0,0,d.width,d.height),d.toBlob(w=>{this.capturedPhoto=new File([w],"photo.jpg",{type:"image/jpeg"});const p=document.createElement("img");p.src=URL.createObjectURL(w),p.style.maxWidth="100%",p.style.maxHeight="200px",r.innerHTML="",r.appendChild(p),n.getTracks().forEach(v=>v.stop()),s.disabled=!1,s.textContent=i},"image/jpeg",.9)})}else throw new Error("Camera API not available")}catch(n){console.error("Camera error:",n),s.disabled=!1,s.textContent=i,this.showError("Could not access camera. Using file upload instead."),o.click()}}),o.addEventListener("change",i=>{if(i.target.files&&i.target.files[0]){this.capturedPhoto=i.target.files[0];const n=new FileReader;n.onload=l=>{r.innerHTML="";const d=document.createElement("img");d.src=l.target.result,d.style.maxWidth="100%",d.style.maxHeight="200px",r.appendChild(d)},n.readAsDataURL(this.capturedPhoto)}}),e.addEventListener("submit",i=>{i.preventDefault();const n=e.description.value;if(!this.capturedPhoto){this.showError("Please take a photo");return}if(this.capturedPhoto.size>1024*1024){this.showError("Photo must be less than 1MB");return}this.onSubmit&&this.onSubmit({description:n,photo:this.capturedPhoto})}),t.addEventListener("click",()=>{this.onCancel&&this.onCancel()})}showSuccess(e){const t=this.element.querySelector(".message");t.textContent=e,t.className="message success"}showError(e){const t=this.element.querySelector(".message");t.textContent=e,t.className="message error"}clearForm(){this.element.querySelector(".story-form").reset(),this.element.querySelector("#photo-preview").innerHTML="",this.element.querySelector("#location-info").textContent="No location selected",this.marker&&(this.map.removeLayer(this.marker),this.marker=null),this.capturedPhoto=null}}class N{constructor(){this.view=new y,this.selectedLocation=null}async showView(e){if(!u.isAuthenticated()){window.location.hash="#/login";return}e.innerHTML="",this.view=new y,e.appendChild(this.view.getElement()),this.view.initMap(),this.setupEventListeners(),this.view.setupEventListeners()}setupEventListeners(){console.log("Setting up presenter handlers"),this.view.onMapClick=(e,t)=>{this.selectedLocation={lat:e,lng:t},this.view.updateLocationMarker(e,t)},this.view.onSubmit=async e=>{var t,s;console.log("Presenter onSubmit handler called");try{const{description:o,photo:r}=e;console.log("Mau Upload Story",{description:o,photo:r});const i=await c.addStory({description:o,photo:r,lat:(t=this.selectedLocation)==null?void 0:t.lat,lon:(s=this.selectedLocation)==null?void 0:s.lng});if(i.error)throw new Error(i.message);this.view.showSuccess("Story added successfully!"),setTimeout(()=>{window.location.hash="#/home"},1500),this.requestNotificationPermission(o)}catch(o){console.error("Error adding story:",o),this.view.showError(o.message)}},this.view.onCancel=()=>{window.location.hash="#/home"}}async requestNotificationPermission(e){if("Notification"in window&&"serviceWorker"in navigator&&await Notification.requestPermission()==="granted")try{const o=await(await navigator.serviceWorker.ready).pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:"BCCs2eonMI-6H2ctvFaWg-UYdDv387Vno_bzUzALpB442r2lCnsHmtrx8biyPi_E-1fSGABK_Qs_GlvPoJJqxbk"});await c.subscribePushNotification({endpoint:o.endpoint,keys:{p256dh:o.toJSON().keys.p256dh,auth:o.toJSON().keys.auth}})}catch(s){console.error("Error subscribing to push notifications:",s)}}async onSubmit(e){try{const t=await c.addStory(e);if(t.error)throw new Error(t.message)}catch{console.error("Online submission failed, saving draft"),await IDBManager.saveDraft({...e,createdAt:new Date().toISOString()}),this.view.showError("Story saved as draft. Will sync when online.")}}}const x=`
  <h2>Login</h2>
  <form class="login-form">
    <div class="form-group">
      <label for="email">Email</label>
      <input type="email" id="email" name="email" required>
    </div>
    
    <div class="form-group">
      <label for="password">Password</label>
      <input type="password" id="password" name="password" required minlength="8">
    </div>
    
    <button type="submit" class="submit-btn">Login</button>
  </form>
  
  <p class="register-link">Don't have an account? <a href="#">Register here</a></p>
  <div class="message"></div>
`;class B{constructor(){this.element=this.createViewElement(),this.onSubmit=null,this.onRegisterClick=null,this.setupEventListeners()}createViewElement(){const e=document.createElement("div");return e.className="login-view",e.innerHTML=x,e}getElement(){return this.element}setupEventListeners(){const e=this.element.querySelector(".login-form"),t=this.element.querySelector(".register-link a");if(!e||!t)throw new Error("Required form elements not found");e.addEventListener("submit",this.handleSubmit.bind(this)),t.addEventListener("click",this.handleRegisterClick.bind(this))}handleSubmit(e){e.preventDefault();const t=e.target,s=t.email.value.trim(),o=t.password.value;this.validateInput(s,o)&&typeof this.onSubmit=="function"&&this.onSubmit({email:s,password:o})}handleRegisterClick(e){e.preventDefault(),typeof this.onRegisterClick=="function"&&this.onRegisterClick()}validateInput(e,t){return!e||!t?(this.showError("Please fill in all fields"),!1):this.isValidEmail(e)?t.length<8?(this.showError("Password must be at least 8 characters long"),!1):!0:(this.showError("Please enter a valid email address"),!1)}isValidEmail(e){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)}showSuccess(e){this.updateMessage(e,"success")}showError(e){this.updateMessage(e,"error")}updateMessage(e,t){const s=this.element.querySelector(".message");s&&(s.textContent=e,s.className=`message ${t}`)}}class D{constructor(){console.log("Running to logging view"),this.view=new B}showView(e){if(console.log("showView called with container:",e),!e){console.error("No container element provided!");return}console.log("Running to logging view v2"),e.innerHTML="",console.log("Container before:",e.innerHTML),e.appendChild(this.view.getElement()),console.log("Containerrrrrrr"),console.log("Container after:",e.innerHTML),console.log("Form exists?:",e.querySelector(".login-form")),this.setupEventListeners()}setupEventListeners(){this.view.onSubmit=async e=>{try{await u.login(e),this.view.showSuccess("Login successful!"),setTimeout(()=>{window.location.hash="#/home"},1e3)}catch(t){this.view.showError(t.message)}},this.view.onRegisterClick=()=>{window.location.hash="#/register"}}}class q{constructor(){this.element=this.createViewElement(),this.onSubmit=null,this.onLoginClick=null,this.setupEventListeners()}createViewElement(){const e=document.createElement("div");return e.className="register-view",e.innerHTML=`
        <h2>Register</h2>
        <form class="register-form">
          <div class="form-group">
            <label for="name">Name</label>
            <input type="text" id="name" name="name" required>
          </div>
          
          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" required>
          </div>
          
          <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" name="password" required minlength="8">
          </div>
          
          <button type="submit" class="submit-btn">Register</button>
        </form>
        
        <p class="login-link">Already have an account? <a href="#">Login here</a></p>
        <div class="message"></div>
      `,e}getElement(){return this.element}setupEventListeners(){console.log("Setting up register form listeners");const e=this.element.querySelector(".register-form"),t=this.element.querySelector(".login-link a");e.addEventListener("submit",s=>{console.log("Form submit triggered"),s.preventDefault();const o=e.name.value,r=e.email.value,i=e.password.value;this.onSubmit&&this.onSubmit({name:o,email:r,password:i})}),t.addEventListener("click",s=>{s.preventDefault(),this.onLoginClick&&this.onLoginClick()})}showSuccess(e){const t=this.element.querySelector(".message");t.textContent=e,t.className="message success"}showError(e){const t=this.element.querySelector(".message");t.textContent=e,t.className="message error"}}class I{constructor(){this.view=new q}showView(e){e.innerHTML="",e.appendChild(this.view.getElement()),this.view.setupEventListeners(),this.setupEventListeners()}setupEventListeners(){this.view.onSubmit=async e=>{try{await u.register(e),this.view.showSuccess("Registration successful! Please login."),setTimeout(()=>{window.location.hash="#/login"},1500)}catch(t){this.view.showError(t.message)}},this.view.onLoginClick=()=>{window.location.hash="#/login"}}}class V{constructor(){this.authManager=u,this.setupNavigation(),this.setupViewTransition(),this.setupAuthState(),this.setupPWA()}setupNavigation(){window.addEventListener("hashchange",()=>this.route()),this.route()}setupViewTransition(){document.startViewTransition||(document.startViewTransition=e=>e())}setupAuthState(){var e;this.authManager.onAuthStateChanged(t=>{const s=document.getElementById("login-nav"),o=document.getElementById("register-nav"),r=document.getElementById("logout-nav");t?(s.style.display="none",o.style.display="none",r.style.display="block"):(s.style.display="block",o.style.display="block",r.style.display="none")}),(e=document.getElementById("logout-nav"))==null||e.addEventListener("click",t=>{t.preventDefault(),this.authManager.logout(),window.location.hash="#/home"})}async route(){const e=window.location.hash;let t;console.log("Routing to:",e),document.startViewTransition(()=>{if(e==="#/home"||e===""||e==="#")t=new T;else if(e.startsWith("#/stories/")){const s=e.split("/")[2];t=new A(s)}else if(e==="#/add-story")t=new N;else if(e==="#/login")console.log("Routing to login Presenter"),t=new D;else if(e==="#/register")t=new I;else{document.getElementById("view-container").innerHTML="<h2>Page Not Found</h2>";return}t&&t.showView(document.getElementById("view-container"))})}setupPWA(){let e;const t=document.getElementById("install-button");window.addEventListener("beforeinstallprompt",s=>{s.preventDefault(),e=s,t&&(t.style.display="block",t.addEventListener("click",async()=>{t.style.display="none",e.prompt();const{outcome:o}=await e.userChoice;console.log(`User response to the install prompt: ${o}`),e=null}))}),window.addEventListener("appinstalled",s=>{console.log("App was installed"),t&&(t.style.display="none")}),window.matchMedia("(display-mode: standalone)").matches&&(console.log("Running as PWA"),t&&(t.style.display="none")),window.matchMedia("(display-mode: standalone)").addEventListener("change",s=>{s.matches&&(console.log("App is now running in standalone mode"),t&&(t.style.display="none"))})}}new V;
